#!/usr/bin/env bash
# Get workspaces including id, monitor, active, and windows

workspaces() {
    MONITORS=$(hyprctl monitors -j)
    WORKSPACES=$(hyprctl workspaces -j)
    SUBMAP=$()

    MONITOR_IDS=$(echo ${MONITORS} | jq 'map({key: .name, value: .id}) | from_entries')
    ACTIVE_WORKSPACES=$(echo ${MONITORS} | jq 'map({key: .name, value: .activeWorkspace.id}) | from_entries')
    WORKSPACE_WINDOWS=$(echo ${WORKSPACES} | jq 'map({key: .id | tostring, value: .windows}) | from_entries')

    EXISTING_WORKSPACES=$(echo ${WORKSPACES} | jq --argjson windows "${WORKSPACE_WINDOWS}" --argjson monitors "${MONITOR_IDS}" --argjson active "${ACTIVE_WORKSPACES}" -Mc \
        'map(select(.id != -99)) | map({id: .id, windows: ($windows[.id | tostring]//0), monitor: ($monitors[.monitor]//0), active: ($active[.monitor] == .id)}) | sort_by(.id)')

    echo ${EXISTING_WORKSPACES} | jq -Mc '
  # Input data
  . as $data

  # Generate full list of workspaces
  | [
      (range(1,7) | { "id": ., "windows":0, "monitor":2, "active":false }),
      (range(7,13) | { "id": ., "windows":0, "monitor":1, "active":false }),
      (range(13, 19) | { "id": ., "windows":0, "monitor":0, "active":false })
    ]

  # For some reason a workspace with id 0 is inserted
  | map(select(.id != 0))

  # Merge input data and generated workspaces, removing duplicates
  | $data + . | unique_by(.id)
'
}

socat -u UNIX-CONNECT:/tmp/hypr/$HYPRLAND_INSTANCE_SIGNATURE/.socket2.sock - | while read -r line; do
	workspaces
done
